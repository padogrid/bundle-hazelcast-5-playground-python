#!/usr/bin/env bash

# ========================================================================
# Copyright (c) 2020-2023 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

if [ "$HELP" == "true" ]; then
cat <<EOF
NAME
   $EXECUTABLE - Start Hazelcast Playground

SYNOPSIS
   $EXECUTABLE [-ip ip_address] [-port port] [-?]

OPTIONS
   -ip ip_address
             Binds to the specified address and port number. Default: localhost

   -port
             Port number. Default: 5006
   
DESCRIPTION
   Starts Hazelcast Playground.
   
DEFAULT
   ./$EXECUTABLE
EOF
   exit
fi

if [ "$IP_ADDRESS" == "" ]; then
   IP_ADDRESS="localhost"
fi
PORT="$PORT_ARG"
if [ "$PORT" == "" ]; then
   PORT="5006"
fi

if [ "$SSL_CERTFILE" == "" ]; then
   URL="http"
else
   URL="https"
fi
URL="${URL}://$IP_ADDRESS:$PORT/HazelcastPlayground"
cat <<EOF
Staring Hazelcast Playground on port $IP_ADDRESS:$PORT...
- URL: $URL
EOF

HAZELCAST_PLAYGROUND="$APP_DIR/src/main/python/padogrid/hazelcast/playground/HazelcastPlayground.py"

OPTS="--port $PORT --allow-websocket-origin=$IP_ADDRESS:$PORT"

if [ "$PLAYGROUND_OAUTH_ENABLED" == "true" ]; then
   if [ "$OAUTH_PROVIDER" != "" ]; then
      OPTS="$OPTS --oauth-provider $OAUTH_PROVIDER"
   fi
   if [ "$OAUTH_KEY" != "" ]; then
      OPTS="$OPTS --oauth-key $OAUTH_KEY"
   fi
   if [ "$OAUTH_SECRET" != "" ]; then
      OPTS="$OPTS --oauth-secret $OAUTH_SECRET"
   fi
   if [ "$COOKIE_SECRET" != "" ]; then
      OPTS="$OPTS --cookie-secret=$COOKIE_SECRET"
   fi
   if [ "$OAUTH_EXPIRY" != "" ]; then
      OPTS="$OPTS --oauth-expiry-days $OAUTH_EXPIRY"
   fi
   if [ "$OAUTH_ENCRYPTION" != "" ]; then
      OPTS="$OPTS --oauth-encryption-key=$OAUTH_ENCRYPTION"
   fi
fi
if [ "$SSL_CERTFILE" != "" ]; then
   OPTS="$OPTS --ssl-certfile $SSL_CERTFILE"
fi
if [ "$SSL_KEYFILE" != "" ]; then
   OPTS="$OPTS --ssl-keyfile $SSL_KEYFILE"
fi
pushd $APP_DIR > /dev/null
panel serve $HAZELCAST_PLAYGROUND $OPTS
popd > /dev/null
